# The test environment and commands
[tox]
envlist = check, test

# Primary test environment that will be called unless name matches one of the other
# described environments. This way it can be called with `tox -e test` (or any name other
# than check/deps) - but importantly can be called while specifying python version.
# e.g. `tox -e py310` will run tests in a python3.10 environment.
[testenv]
description = Runs pytest with posargs - `tox -e test -- -v` == `pytest -v`
deps =
    # --no-deps
    --requirement deps/test.txt
passenv =
    SHED_SLOW_TESTS
commands =
    pytest {posargs:-n auto}

[testenv:check]
description = Runs all formatting tools then static analysis (quick)
ignore_errors = true
deps =
    # --no-deps
    --requirement deps/check.txt
commands =
    python tests/test_version.py
    shed
    flake8
    mypy --config-file=tox.ini src/

[testenv:deps]
description = Updates test corpora and the pinned dependencies in `deps/*.txt`
basepython = 3.9
deps =
    pip-tools
commands =
    pip-compile --quiet --upgrade --rebuild --output-file=deps/check.txt deps/check.in setup.py
    pip-compile --quiet --upgrade --rebuild --output-file=deps/test.txt deps/test.in setup.py


[pytest]
xfail_strict = True
addopts =
    -Werror
    --tb=short
    --cov=shed
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-fail-under=100

[flake8]
ignore = D1,E501,W503,S101,S310,SIM105
exclude = .*/,__pycache__

[mypy]
python_version = 3.9
platform = linux
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_untyped_decorators = True
follow_imports = silent
ignore_missing_imports = True
implicit_reexport = False
warn_no_return = True
warn_return_any = True
warn_unreachable = True
warn_unused_ignores = True
warn_unused_configs = True
warn_redundant_casts = True
